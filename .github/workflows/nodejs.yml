# This workflow will do a clean install of node dependencies and build the source code
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
    - run: npm ci
    - run: npm run build --if-present
    - run: |
        cd dist
        zip -r ../saltbot.zip *
    - name: Upload extension zip
      uses: actions/upload-artifact@v2
      with:
        name: extension
        path: saltbot.zip
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Set tag env var
      run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Draft Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.TAG_VERSION}}
        release_name: Release ${{env.TAG_VERSION}}
        draft: true
        
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: extension
    - name: Upload extension to GitHub Releases
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./extension/saltbot.zip
        asset_name: saltbot ${{env.TAG_VERSION}}.zip
        asset_content_type: application/zip
    - name: Publish in Chrome Store
      uses: Passiverecords/chrome-extension-upload-action@1.4.1
      with:
        app-id: 'bholoegapebhflljekancpcnajigaiih'
        file-name: './extension/saltbot.zip'
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}
        publish: true
