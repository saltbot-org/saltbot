{
  "_from": "flush-write-stream@^1.0.0",
  "_id": "flush-write-stream@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-yBuQ2HRnZvGmCaRoCZRsRd2K5Bc=",
  "_location": "/npm/pacote/make-fetch-happen/mississippi/flush-write-stream",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "flush-write-stream",
    "fetchSpec": "^1.0.0",
    "name": "flush-write-stream",
    "raw": "flush-write-stream@^1.0.0",
    "rawSpec": "^1.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "/npm/pacote/make-fetch-happen/mississippi"
  ],
  "_resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.0.2.tgz",
  "_shasum": "c81b90d8746766f1a609a46809946c45dd8ae417",
  "_shrinkwrap": null,
  "_spec": "flush-write-stream@^1.0.0",
  "_where": "/Users/zkat/Documents/code/npm/node_modules/pacote/node_modules/make-fetch-happen/node_modules/mississippi",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/flush-write-stream/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "inherits": "^2.0.1",
    "readable-stream": "^2.0.4"
  },
  "deprecated": false,
  "description": "A write stream constructor that supports a flush function that is called before finish is emitted",
  "devDependencies": {
    "tape": "^4.2.2"
  },
  "homepage": "https://github.com/mafintosh/flush-write-stream",
  "license": "MIT",
  "main": "index.js",
  "name": "flush-write-stream",
  "optionalDependencies": {},
  "readme": "# flush-write-stream\n\nA write stream constructor that supports a flush function that is called before `finish` is emitted\n\n```\nnpm install flush-write-stream\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/flush-write-stream.svg?style=flat)](http://travis-ci.org/mafintosh/flush-write-stream)\n\n## Usage\n\n``` js\nvar writer = require('flush-write-stream')\n\nvar ws = writer(write, flush)\n\nws.on('finish', function () {\n  console.log('finished')\n})\n\nws.write('hello')\nws.write('world')\nws.end()\n\nfunction write (data, enc, cb) {\n  // i am your normal ._write method\n  console.log('writing', data.toString())\n  cb()\n}\n\nfunction flush (cb) {\n  // i am called before finish is emitted\n  setTimeout(cb, 1000) // wait 1 sec\n}\n```\n\nIf you run the above it will produce the following output\n\n```\nwriting hello\nwriting world\n(nothing happens for 1 sec)\nfinished\n```\n\n## API\n\n#### `var ws = writer([options], write, [flush])`\n\nCreate a new writable stream. Options are forwarded to the stream constructor.\n\n#### `var ws = writer.obj([options], write, [flush])`\n\nSame as the above except `objectMode` is set to `true` per default.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/flush-write-stream.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.0.2"
}
