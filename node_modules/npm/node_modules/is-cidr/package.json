{
  "_from": "is-cidr",
  "_id": "is-cidr@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-+1qs9lklUxA1naMsrgPkDGocKvw=",
  "_location": "/npm/is-cidr",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "is-cidr",
    "fetchSpec": "latest",
    "name": "is-cidr",
    "raw": "is-cidr",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/npm"
  ],
  "_resolved": "https://registry.npmjs.org/is-cidr/-/is-cidr-1.0.0.tgz",
  "_shasum": "fb5aacf659255310359da32cae03e40c6a1c2afc",
  "_shrinkwrap": null,
  "_spec": "is-cidr",
  "_where": "/Users/rebecca/code/npm",
  "author": {
    "email": "flipjs.io@gmail.com",
    "name": "Felipe Apostol",
    "url": "http://flipjs.io/"
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/flipjs/is-cidr/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run test && npm run build"
    }
  },
  "dependencies": {
    "cidr-regex": "1.0.6"
  },
  "deprecated": false,
  "description": "Check if a string is a valid CIDR",
  "devDependencies": {
    "ava": "0.13.0",
    "babel-cli": "6.6.5",
    "babel-preset-es2015": "6.6.0",
    "babel-register": "6.7.2",
    "commitizen": "2.7.3",
    "cz-conventional-changelog": "1.1.5",
    "eslint": "2.4.0",
    "eslint-config-standard": "5.1.0",
    "eslint-plugin-babel": "3.1.0",
    "eslint-plugin-promise": "1.1.0",
    "eslint-plugin-standard": "1.3.2",
    "ghooks": "1.0.3",
    "rimraf": "2.5.2",
    "semantic-release": "4.3.5"
  },
  "homepage": "https://github.com/flipjs/is-cidr#readme",
  "keywords": [
    "cidr",
    "ip",
    "ip address",
    "netblock",
    "regex"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "is-cidr",
  "optionalDependencies": {},
  "readme": "# is-cidr\n\nCheck if a string is a valid CIDR\n\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release)\n[![version](https://img.shields.io/npm/v/is-cidr.svg?style=flat-square)](http://npm.im/is-cidr)\n[![MIT License](https://img.shields.io/npm/l/is-cidr.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![travis build](https://img.shields.io/travis/flipjs/is-cidr.svg?style=flat-square)](https://travis-ci.org/flipjs/is-cidr)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?style=flat-square)](http://commitizen.github.io/cz-cli/)\n[![downloads](https://img.shields.io/npm/dm/is-cidr.svg?style=flat-square)](http://npm-stat.com/charts.html?package=is-cidr&from=2016-03-24)\n\n## Install\n\n```sh\n$ npm install --save is-cidr\n```\n\n## Usage\n\n```js\nimport isCidr from 'is-cidr' // default is isCidrV4\nimport { isCidrV4, isCidrV6 } from 'is-cidr'\n// OR\nvar isCidrV4 = require('is-cidr').isCidrV4\nvar isCidrV6 = require('is-cidr').isCidrV6\n\n// is a CIDR v4\nisCidr('18.101.25.153/24') // true\n\n// is not a CIDR v4\nisCidrV4('999.999.999.999/12') // false\n\n// is a CIDR v6\nisCidrV6('fe80:0000:0000:0000:0204:61ff:fe9d:f156') // true\n\n// is not a CIDR v6\nisCidrV6('fe80:0000:0000:0000:0204:61ff:fe9d:f156/a') // false\n```\n\n## API\n\n### isCidr(string)\n\nCheck if a string is CIDR IPv4.\n\n### isCidrV4(string)\n\nCheck if a string is CIDR IPv4.\n\n### isCidrV6(string)\n\nCheck if a string is CIDR IPv6.\n\n## License\n\nMIT Â© [Felipe Apostol](https://github.com/flipjs)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/flipjs/is-cidr.git"
  },
  "scripts": {
    "build": "babel --presets es2015 -d lib/ src/",
    "clean": "rimraf lib && mkdir lib",
    "commit": "git-cz",
    "lint": "eslint src/ test/",
    "prebuild": "npm run lint && npm run clean",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "ava --require babel-register"
  },
  "version": "1.0.0"
}
