{
  "_from": "locate-path@^2.0.0",
  "_id": "locate-path@2.0.0",
  "_inBundle": false,
  "_integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
  "_location": "/npm/libnpx/yargs/find-up/locate-path",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "locate-path",
    "fetchSpec": "^2.0.0",
    "name": "locate-path",
    "raw": "locate-path@^2.0.0",
    "rawSpec": "^2.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "/npm/libnpx/yargs/find-up"
  ],
  "_resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
  "_shasum": "2b568b265eec944c6d9c0de9c3dbbbca0354cd8e",
  "_shrinkwrap": null,
  "_spec": "locate-path@^2.0.0",
  "_where": "/Users/zkat/Documents/code/npm/node_modules/libnpx/node_modules/yargs/node_modules/find-up",
  "bin": null,
  "bundleDependencies": false,
  "dependencies": {
    "p-locate": "^2.0.0",
    "path-exists": "^3.0.0"
  },
  "deprecated": false,
  "description": "> Get the first path that exists on disk of multiple paths",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "name": "locate-path",
  "optionalDependencies": {},
  "peerDependencies": {},
  "readme": "# locate-path [![Build Status](https://travis-ci.org/sindresorhus/locate-path.svg?branch=master)](https://travis-ci.org/sindresorhus/locate-path)\n\n> Get the first path that exists on disk of multiple paths\n\n\n## Install\n\n```\n$ npm install --save locate-path\n```\n\n\n## Usage\n\nHere we find the first file that exists on disk, in array order.\n\n```js\nconst locatePath = require('locate-path');\n\nconst files = [\n\t'unicorn.png',\n\t'rainbow.png', // only this one actually exists on disk\n\t'pony.png'\n];\n\nlocatePath(files).then(foundPath => {\n\tconsole.log(foundPath);\n\t//=> 'rainbow'\n});\n```\n\n\n## API\n\n### locatePath(input, [options])\n\nReturns a `Promise` for the first path that exists or `undefined` if none exists.\n\n#### input\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `Object`\n\n##### concurrency\n\nType: `number`<br>\nDefault: `Infinity`<br>\nMinimum: `1`\n\nNumber of concurrently pending promises.\n\n##### preserveOrder\n\nType: `boolean`<br>\nDefault: `true`\n\nPreserve `input` order when searching.\n\nDisable this to improve performance if you don't care about the order.\n\n##### cwd\n\nType: `string`<br>\nDefault: `process.cwd()`\n\nCurrent working directory.\n\n### locatePath.sync(input, [options])\n\nReturns the first path that exists or `undefined` if none exists.\n\n#### input\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `Object`\n\n##### cwd\n\nSame as above.\n\n\n## Related\n\n- [path-exists](https://github.com/sindresorhus/path-exists) - Check if a path exists\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "scripts": {},
  "version": "2.0.0"
}
